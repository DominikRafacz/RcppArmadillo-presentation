{
	"name": "RcppArmadillo",
	"description": "Combine power of Rcpp, C++ and Armadillo to avhieve efficiency!",
	"footer": "None of the copyrights belong to us",
	"pages": [
		{
			"cards": [
				{
					"title": "Generating",
					"methods": [
						{
							"name": "linspace",
							"description": "Generate vector with linearly spaced elements",
							"params": [
								{
									"name": "start"
								},
								{
									"name": "end"
								},
								{
								    "name":"n"
								}
							]
						},
						{
							"name": "eye",
							"description": "generate identity matrix",
							"params": [
								{
									"name": "n_rows, n_cols"
								}
							]
						},
                        {
							"name": "one",
							"description": "generate object filled with ones",
						    "params": [
								{
									"name": "n_rows, n_cols"
								}
							]
                            
                        },
                        {
							"name": "zeros",
							"description": "generate object filled with zeros",
							"params": [
								{
									"name": "n_rows, n_cols"
								}
							]
						},
                        {
							"name": "randu / randn",
							"description": "generate object with random values (uniform and normal distributions)",
							"params": [
								{
									"name": "n_rows",
									"description": "number of rows"
								},
								{
									"name": "n_cols",
									"description": "number of columns"
								}
							]
						}
					]
				},
				{
					"title": "Functions",
					"methods": [
						{
							"name": "abs",
							"description": "obtain magnitude of each element",
							"params": [
								{
									"name": "x"
								}
							]
						},
						{
							"name": "all",
							"description": "check whether all elements are non-zero, or satisfy a relational condition",
							"params": [
								{
									"name": "X",
									"description": "matrix"
								}
							]
						},
						{
							"name": "any",
							"description": "check whether any element is non-zero, or satisfies a relational condition",
							"params": [
								{
									"name": "X"
								}
							]
						},
						{
							"name": "conv_to<type>",
							"description": "convert between matrix types",
							"params": [
								{
									"name": "X"
								}
							]
						},
						{
							"name": "cross",
							"description": "cross product",
							"params": [
								{
									"name": "A,B",
									"description": "matrix"
								}
							]
						},
						{
							"name": "det",
							"description": "Determinant",
							"params": [
								{
									"name": "X"
								}
							]
						},
						{
							"name": "diagmat",
							"description": "Diagonal matrix from given matrix or vector",
							"params": [
								{
									"name": "X"
								}
							]
						},
						{
							"name": "index_min / index_max",
							"description": "indices of extremum values",
							"params": [
								{
									"name": "X"
								}
							]
						},
						{
							"name": "min / max",
							"description": "return extremum values",
							"params": [
								{
									"name": "X"
								}
							]
						},
						{
							"name": "norm",
							"description": "various norms of vectors and matrices",
							"params": [
								{
									"name": "X"
								},
								{
									"name": "p",
									"description": "Intiger >= 1 or '-inf', 'inf', 'fro' "
								}
							]
						},
						{
							"name": "reshape",
							"description": "change size while keeping elements",
							"params": [
								{
									"name": "X"
								},
								{
									"name": "n_row"
								},
								{
									"name": "n_col"
								}
							]
						},
						{
							"name": "sum",
							"description": "return sum",
							"params": [
								{
									"name": "X"
								}
							]
						},
						{
							"name": "trace",
							"description": "sum of diagonal elements",
							"params": [
								{
									"name": "X"
								}
							]
						}
						
					]
				},
				{
					"title": "Decompositions, Factorisations, Inverses and Equation Solvers ",
					"methods": [
						{
							"name": "get_top_stories",
							"description": "Hacker News top stories",
							"params": [
								{
									"name": "max_items"
								}
							]
						},
						{
							"name": "get_top_stories_ids",
							"description": "Hacker News top stories ids"
						}
					]
				},
				{
					"title": "Latest stories",
					"methods": [
						{
							"name": "get_latest_ask_stories",
							"description": "Hacker News latest ask stories",
							"params": [
								{
									"name": "max_items"
								}
							]
						},
						{
							"name": "get_latest_ask_stories_ids",
							"description": "Hacker News latest ask stories ids"
						},
						{
							"name": "get_latest_job_stories",
							"description": "Hacker News latest job stories",
							"params": [
								{
									"name": "max_items"
								}
							]
						},
						{
							"name": "get_latest_job_stories_ids",
							"description": "Hacker News latest job stories ids"
						},
						{
							"name": "get_latest_show_stories",
							"description": "Hacker News latest show stories",
							"params": [
								{
									"name": "max_items"
								}
							]
						},
						{
							"name": "get_latest_show_stories_ids",
							"description": "Hacker News latest show stories ids"
						}
					]
				},
				{
					"title": "Examples",
					"methods": [
						{
							"name": "%>>%",
							"withoutBrackets": true,
							"description": "Example for pipeR",
							"params": [
								{
									"name": "param",
									"description": "Parameter description",
									"classes": "my-parameter"
								}
							],
							"examples": [
								{
									"name": "df %>>% plot(col = \"red\")"
								}
							]
						}
					]
				},
				{
					"title": "Profile",
					"methods": [
						{
							"name": "get_updates",
							"description": "Hacker News updated profiles"
						},
						{
							"name": "get_user_by_username",
							"description": "Get Hacker News user",
							"params": [
								{
									"name": "username",
									"description": "Username of the user, that should be retrieved"
								}
							]
						}
					]
				},
				{
					"title": "Items",
					"methods": [
						{
							"name": "get_item_by_id",
							"description": "Get Hacker News by Id",
							"params": [
								{
									"name": "id",
									"description": "Id of the item, that should be retrieved"
								}
							]
						},
						{
							"name": "get_item_by_ids",
							"description": "Get Hacker News by ids",
							"params": [
								{
									"name": "ids",
									"description": "List of ids."
								}
							]
						},
						{
							"name": "get_max_item_id",
							"description": "Hacker News item largest id"
						}
					]
				}
			]
		}
	]
}
